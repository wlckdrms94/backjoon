//java 구구단

import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        if(N > 0){
            if (N <= 9) {
                for (int i = 1; i <= 9; i++) {
                    System.out.println(N + " * " + i + " = " + N * i);
                }
            }else {
                System.out.print("구구단의 범위를 넘어갑니다.");
            }
        } else {
            System.out.print("구구단의 범위보다 작습니다.");
        }

        sc.close();
    }
}

//java n번째 자리수까지 더하기

import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int a = 0;
        for (int i = 1 ; i <= N ; i++){
            a = a + i;
        }
        System.out.println(a);

        sc.close();
    }
}

// N개 숫자 찍기
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        
        if(N <= 100000){
            for(int i = 1; i <= N; i++) {
                System.out.println(i);
            }
        } else{
            System.out.print("범위를 벗어납니다.");
        }
        sc.close();
    }
}

// 기찍 N
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        
        if(N <= 100000){
            for(int i = N; i > 0; i--) {
                System.out.println(i);
            }
        } else{
            System.out.print("범위를 벗어납니다.");
        }
        sc.close();
    }
}

// 별찍기 - 1
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        
        for(int i = N; i >= 1; i--) {
            for(int b = N; b >= i; b--){
                System.out.print("*");
            }
            if (i != 1){
                System.out.println();
            }
        }
        sc.close();
    }
}

// 별찍기 - 2
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        
        for(int i = N; i >= 1; i--){
            for(int k = i - 1; k >= 1; k--){
                System.out.print(" ");
            }
            for(int j = i; j <= N; j++){
                System.out.print("*");
            }
            if(i != 1){
                System.out.println();
            }
        }
        
        sc.close();
    }
}

//while - 1
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        int i = 0;
        while (i >= 0) {
            i++;
            int A = sc.nextInt();
            int B = sc.nextInt();
            if(A > 0){
                if(B < 10){
                    int C = A + B;
                    System.out.println(C);
                }
            }else if(A == 0 && B == 0){
                break;
            }
        }
        
        sc.close();
    }
}

//while - 2
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        while (sc.hasNextInt()) {
            int A = sc.nextInt();
            int B = sc.nextInt();
            if(A > 0){
                if(B < 10){
                    int C = A + B;
                    System.out.println(C);
                }
            }
        }
        
        sc.close();
    }
}


// while - 3
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int originNumber = sc.nextInt(); // 최초값 받아오기 ex ) 26
        int left = originNumber / 10; // 2 저장
        int right = originNumber % 10; // 6 저장

        int cycleResult = 0; // 사이클 돈 횟수 구하기
        int A = originNumber / 10; // A 에 저장된 값에서 10을 나눠서 B에 저장 앞쪽값은 한번만 구하면 된다
        int B = originNumber % 10; // 저장
        int C,D;
        while (true) {
            cycleResult++; //사이클 1회 추가
            
            C = A + B ; // A+B
            D = C % 10; // C 의 끝자리 구하기
            A = B;
            B = D;
            
            if(A == left && B == right){ // A 와 B 가 원래 숫자와 완벽히 일치할때까지 구해라 이놈아
                System.out.print(cycleResult);
                break;
            }
        }
        sc.close();
    }
}

//숫자 받아서 저장 까진 좋았으나 이유를 모르겠음
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in); //숫자를 받겠다 
        int writeNumber = sc.nextInt(); // 처음 받은 숫자를 저장

        if(writeNumber < 1000000){
            int[] area = new int[writeNumber]; // 처음받은 숫자만큼 배열 공간 생성

            int max = area[0]; // 최대값 계산용
            int min = area[0]; // 최소값 계산용
            for(int i = 0; i < writeNumber; i++){
                area[i] = sc.nextInt(); // 처음 받은 숫자만큼 배열 번호에 맞게 저장
                System.out.println("에이리어"+ i + ':' + area[i]);
            }
            System.out.println("최대값 :" + max);
            System.out.println("최소값 :" + min);
            for(int i = 0; i < area.length; i++){ // 배열의 갯수 만큼 검사 실행
                if(max < area[i]){ //최대값이 i 보다 무조건 큼 마지막에는 무조건 최대값만 남음
                    max = area[i];
                    System.out.println("최대 에이리어"+ i + ':' + area[i]);
                }
                if(min > area[i]){
                    min = area[i]; //최소값이 i 보다 무조건 작음 마지막에는 무조건 최소값만 남음
                    System.out.println("최소 에이리어"+ i + ':' + area[i]);
                }
            }
            
            System.out.println("최대값 :" + max);
            System.out.println("최소값 :" + min);

            sc.close();
        }
    }
}